[{"/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/App.js":"1","/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/ControlPanel.js":"2","/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/Graph2.js":"3","/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/Graph.js":"4","/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/index.js":"5"},{"size":159,"mtime":1644523613443,"results":"6","hashOfConfig":"7"},{"size":4300,"mtime":1644523972247,"results":"8","hashOfConfig":"7"},{"size":3407,"mtime":1644528433857,"results":"9","hashOfConfig":"7"},{"size":2546,"mtime":1644567102173,"results":"10","hashOfConfig":"7"},{"size":506,"mtime":1644523584125,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y8g4so",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/App.js",[],"/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/ControlPanel.js",[],"/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/Graph2.js",["23"],"import React from \"react\";\nimport { createChart, CrosshairMode } from \"lightweight-charts\";\nimport \"./app.css\";\n\nconst Graph2 = () => {\n  const ws = new WebSocket(\n    \"wss://stream.binance.com:9443/ws/btcusdt@kline_10m\"\n  );\n\n  const chartRef = React.useRef(null);\n\n  // TradingView Static Chart Properties\n  //   const chartProperties = {\n  //     width: 0,\n  //     height: 0,\n  //     baseLineStyle: 2,\n  //     timeScale: {\n  //       timeVisible: true,\n  //       secondsVisible: false,\n  //       borderColor: \"#262626\",\n  //     },\n  //     crosshair: {\n  //       mode: CrosshairMode.Normal,\n  //     },\n  //     layout: {\n  //       backgroundColor: \"#262626\",\n  //       textColor: \" #9ACCFF\",\n  //     },\n  //     grid: {\n  //       vertLines: {\n  //         color: \"#262626\",\n  //       },\n  //       horzLines: {\n  //         color: \"#262626\",\n  //       },\n  //     },\n  //     openVisible: false,\n  //   };\n\n  //   React.useEffect(() => {\n  //     if (chartRef.current) {\n  //       const chart = createChart(chartRef.current, chartProperties);\n  //       prepareChart(chart, ws);\n  //     }\n  //   }, []);\n\n  //   function prepareChart(chart, ws) {\n  //     const barSeries = chart.addBarSeries({\n  //       upColor: \"#74C2E3\",\n  //       downColor: \"#FF0000\",\n  //       wickDownColor: \"595959\",\n  //       wickUpColor: \"#595959\",\n  //       thinBars: false,\n  //     });\n  React.useEffect(() => {\n    if (chartRef.current) {\n      const chart = createChart(chartRef.current, {\n        width: 0,\n        height: 0,\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false,\n          borderColor: \"#262626\",\n        },\n        layout: {\n          backgroundColor: \"#262626\",\n          textColor: \" #9ACCFF\",\n        },\n        grid: {\n          vertLines: {\n            color: \"#262626\",\n          },\n          horzLines: {\n            color: \"#262626\",\n          },\n        },\n        crosshair: {\n          mode: CrosshairMode.Normal,\n        },\n        rightPriceScale: {\n          borderColor: \"#262626\",\n        },\n      });\n      prepareChart(chart, ws);\n    }\n  }, []);\n\n  function prepareChart(chart, ws) {\n    const barSeries = chart.addBarSeries({\n      upColor: \"#74C2E3\",\n      downColor: \"#FF0000\",\n      thinBars: true,\n    });\n\n    // Fetch binance static chart REST API\n    fetch(\n      \"https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1m&limit=1000\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        const cdata = data.map((d) => {\n          return {\n            time: d[0] / 1000,\n            open: parseFloat(d[1]),\n            high: parseFloat(d[2]),\n            low: parseFloat(d[3]),\n            close: parseFloat(d[4]),\n          };\n        });\n        barSeries.setData(cdata);\n        console.log(\"Binance Static Kline REST API called with fetch()\");\n      })\n      .catch((err) => console.log(err));\n    // If fetch api gives CORS issue, use a node proxy\n\n    // Fetch live data from Binance WS API\n    ws.onmessage = (evt) => {\n      const data = JSON.parse(evt.data);\n      console.log(data);\n      const chartData = {\n        time: data.k.t,\n        open: data.k.o,\n        high: data.k.h,\n        low: data.k.l,\n        close: data.k.c,\n      };\n      barSeries.update(chartData);\n    };\n  }\n\n  return <div className=\"wrapper\" ref={chartRef} />;\n};\n\nexport default Graph2;\n","/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/Graph.js",["24"],"/Users/nataliapogrebnaa/Documents/work-test/lightweight-charts_TZ/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":86,"column":6,"nodeType":"27","endLine":86,"endColumn":8,"suggestions":"28"},{"ruleId":"25","severity":1,"message":"29","line":52,"column":6,"nodeType":"27","endLine":52,"endColumn":8,"suggestions":"30"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'ws'. Either include it or remove the dependency array.","ArrayExpression",["31"],"React Hook React.useEffect has missing dependencies: 'chartProperties' and 'ws'. Either include them or remove the dependency array.",["32"],{"desc":"33","fix":"34"},{"desc":"35","fix":"36"},"Update the dependencies array to be: [ws]",{"range":"37","text":"38"},"Update the dependencies array to be: [chartProperties, ws]",{"range":"39","text":"40"},[2114,2116],"[ws]",[1157,1159],"[chartProperties, ws]"]